stages:
- stage: CI
  jobs:
  - job: CI
    steps:
    - script: env
      displayName: ENV variables
    - script: mvn clean package && cp target/${COMPONENT}-1.0.jar ${COMPONENT}.jar
      displayName: Install maven dependencies
    - script: docker build -t ${COMPONENT} .
      displayName: Build docker image

#here the mvn clean command first clean the files and directories creted after a build, package will copile and package the code in .jar/.war file based on pom file and stores this .jar/.war file in a target diretcory by default.

- stage: DockerImageUpload
  condition: succeeded()
  jobs:
  - job: ImageUpload
    steps:
    - script: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 124374336606.dkr.ecr.us-east-1.amazonaws.com
        docker tag ${COMPONENT}:latest 124374336606.dkr.ecr.us-east-1.amazonaws.com/${COMPONENT}:${BUILD_SOURCEBRANCHNAME}
        docker push 124374336606.dkr.ecr.us-east-1.amazonaws.com/${COMPONENT}:${BUILD_SOURCEBRANCHNAME}
      displayName: Docker push image to ECR